var viewport = jQuery.viewport.clone()

var _id = 0
fun id
  return _id++

def to_tree_nodes parent
  .children().each(function() {
    var $this = jQuery(this);
    var node = $.tree_node.clone();
    
    node.find('label:first').html($this.attr('tagName').toLowerCase());
    var idLabel = node.find('.id');
    idLabel.html($this.attr('id'));
    if(idLabel.html() == "") idLabel.hide();
    
    if(!$this.attr('id')) $this.attr('id', id());
    node.data('element', $this.attr('id'));
    
    node.attr('id', id());
    jQuery(this).data('node', node.attr('id'));
    
    jQuery(jQuery(this).attr('class').split(' ')).each(function(which, class) {
    if(class !== "")
    node.find('.classes').append(jQuery('<li>'+class+'</li>'));
    });
    
    var attrs = node.find('dl');
    jQuery(this.attributes).each(function() {
    if(!this.name.match(/id|class/))
    attrs.append("<dt>"+this.name+"</dt><dd>"+this.value+"</dd>");
    });
     
    
    parent.parents('.tree_node:first').removeClass('empty');
    parent.append(node);
    jQuery(this).to_tree_nodes(node.find('ol:first'));
  })

$head
  .append(jQuery.dom_tree_stylesheet)

$body
  .html("")
  .append(viewport)
  
$#viewport iframe
  @src = window.location.href + "?"
  :load
    $#tree
      .html('')
    var body = $this.contents().find('body')
    body.to_tree_nodes(jQuery('#tree'))
    .contents().find('head').append($.canvas_stylesheet)
    body.bind('mouseover', function(e) {
      var el = jQuery(e.target);
      body.find('.inspected').removeClass('inspected');
      el.addClass('inspected');
      var node = el.data('node');
      jQuery('.inspected').removeClass('inspected');
      jQuery('#'+node).addClass('inspected');
    })

$#tree
  :dragstart
    var el = jQuery(e.target)
    unless el.is('button.drag')
      return false
    var node = el.parents('.tree_node:first')
    node.find('ol:first').hide()
    node.find('.toggle:first').addClass('closed')
    node.addClass('dragging')
    &body
      .addClass('dragging')
    return node
    
  :drag
    _e = e.originalEvent
    jQuery(e.dragProxy).css({
      top:e.pageY + 10, 
      left:e.pageX + 10
    }).addClass('inspected');
    
    var el = jQuery(_e.target)
    if el.is('.tree_node') 

  :dragend
    jQuery(e.dragProxy).removeClass('dragging')
    $body
      .removeClass('dragging')

  :mouseover
    var node = jQuery(e.target)
    
    unless node.is('.tree_node')
      node = node.parents('.tree_node:first')
    $.inspected
      .removeClass('inspected')
    node.addClass('inspected')
    $#viewport iframe
      .contents().find('.inspected').removeClass('inspected')
      var element = $this.contents().find('#' + node.data('element'))
      element.addClass('inspected')

  :click
    var el = jQuery(e.target)
    if el.is('.destroy')
      var node = el.parents('.tree_node:first')
      $#viewport iframe
        var element = $this.contents().find('#' + node.data('element'))
        node.remove()
        element.remove()
        
    $#viewport iframe
      if el.is('.block')
        var node = el.parents('.tree_node:first')
        el.toggleClass('active')
        var element = $this.contents().find('#' + node.data('element'))         
        if el.is('.active')
          element.hide()
        unless el.is('.active')
          element.show()
          
    if el.is('.toggle')
      var list = el.parents('.tree_node:first').find('ol:first')
      el.toggleClass('closed')
      if el.is('.closed')
        list.slideUp()
      unless el.is('.closed')
        list.slideDown()
    
$#query
  :keyup
    var val = @value
    $#viewport iframe
      var body = $this.contents().find('body')
      body.find('.queried').removeClass('queried')
      unless val == ""
        body.addClass('masked')
        match = body.find(val)
        match.addClass('queried')
      if val == ""
        body.removeClass('masked')
      
