#!/usr/bin/env ruby

require './lib/dom_tree'
require 'continuous_builder'
require 'haml'
require 'sass'
require 'jabs'
require 'erb'

module DomTree
  class Builder < ContinuousBuilder
    watches :bookmarklet,
      :files => DomTree.app/'bookmarklet'/'source.js.erb',
      :update => :build_bookmarklet

    watches :embedded_haml,
      :files => DomTree.app/'embedded'/'**'/'*.html.haml',
      :module => Haml   

    watches :embedded_jabs,
      :files => DomTree.app/'embedded'/'**'/'*.js.jabs',
      :module => Jabs

    watches :embedded_resources,
      :files => DomTree.app/'embedded'/'**'/'*{.js,.html}',
      :update => :build_embedded

    def build_bookmarklet path
      template = ERB.new(path.read)
        
      f = (DomTree.app/'public'/'bookmarklet.js').open 'w+'
      f.write template.result(binding)
      f.close
    end
    
    def build_embedded path
      scripts = []
      vendor = DomTree.vendor
      scripts << (vendor/'jquery'/'jquery-1.2.6.js')
      #scripts << (vendor/'jstree'/'jquery.listen.js')
      #scripts << (vendor/'jstree'/'tree_component.js')
      
      Pathname.glob(DomTree.app/'embedded'/'**'/'*.html').each do |script|
        flat = script.read
        flat.gsub! "\r\n", ""
        flat.gsub! "\n", ""
        flat.gsub! /\/\*.*\*\//, "" 
        flat.gsub! /\"/ , "\\\""
        name = script.basename.to_s.gsub('.html', '')
        jquery = "jQuery.#{name} = jQuery(\"#{flat}\");"       
        io = StringIO.new jquery
        scripts << io
      end 
      
      Pathname.glob(DomTree.app/'embedded'/'**'/'*.js').each do |script|
        scripts << script
      end
      
      f = (DomTree.app/'public'/'embedded.js').open 'w+'
      f.write scripts.map(&:read).join("\n\n")
      f.close
    end
  end
end

builder = DomTree::Builder.new
builder.build_all
builder.build_continuously
